<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd">
  <metadata>
    <id>CSHARPStandard.Traits.ProvidersByReflection</id>
    <version>0.0.0.17</version>
    <authors>Chris Williams</authors>
    <owners>Chris Williams</owners>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>This library provides functionality to load providers via reflection settings in traits.</description>
    <releaseNotes>v0.0.0.4 - This version uses LoadObjectUsingActivator to load providers.
v0.0.0.8 - This version allows provider trait to determine if it creates instance from assembly or activator.
v0.0.0.11 - Additional error handling
v0.0.0.14 - Introduction of BaseProviderManager and use of IDataReader and IDataWriter.
v0.0.0.17 - Fix for provider entries with variables in them by calling Apply traits.</releaseNotes>
    <copyright>(c) 2018 Read Watch Create</copyright>
    <dependencies>
      <group targetFramework=".NETStandard2.0">
        <dependency id="CSHARPStandard.Diagnostics" version="1.0.0.5" exclude="Build,Analyzers" />
        <dependency id="CSHARPStandard.IO" version="1.0.0.19" exclude="Build,Analyzers" />
        <dependency id="CSHARPStandard.Reflection" version="1.0.0.7" exclude="Build,Analyzers" />
        <dependency id="CSHARPStandard.Traits.Business" version="0.0.0.12" exclude="Build,Analyzers" />
        <dependency id="CSHARPStandard.Traits.Data" version="0.0.0.5" exclude="Build,Analyzers" />
      </group>
    </dependencies>
  </metadata>
  <files>
    <file src="C:\_git\CSHARP.Traits\Apps\CSHARPStandard.Traits.ProvidersByReflection\bin\Debug\netstandard2.0\CSHARPStandard.Traits.ProvidersByReflection.dll" target="lib\netstandard2.0\CSHARPStandard.Traits.ProvidersByReflection.dll" />
  </files>
</package>